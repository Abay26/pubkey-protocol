name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "build" targets have been requested
      # - run: pnpm exec nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="build"
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --no-frozen-lockfile
      - name: List rustup toolchains
        run: rustup toolchain list
      - name: Set default toolchain
        run: rustup default stable
      - name: List rustup toolchains
        run: rustup toolchain list
      - name: Install AVM
        run: cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
      - name: Cargo build
        run: cd anchor && cargo build
      - name: Install Anchor
        run: avm install latest && avm use latest
      - name: Install Solana
        run: sh -c "$(curl -sSfL https://release.solana.com/stable/install)"
      - name: Add Solana to path
        run: echo "~/.local/share/solana/install/active_release/bin/" >> $GITHUB_PATH
      - name: Install Solana CLI
        run: solana-install init 1.18.2 && cargo build-bpf -- --locked
      - name: Generate new keygen
        run: solana-keygen new --no-bip39-passphrase
      - name: Set solana target cluster to local
        run: solana config set --url http:localhost:8899
      - name: Check solana config
        run: solana config get
      - name: cargo list
        run: cargo --list
      - uses: nrwl/nx-set-shas@v4

      # TODO: Make sure the anchor build runs prettier after the build
      # - run: pnpm exec nx-cloud record -- nx format:check
      - run: pnpm exec nx affected -t lint test build
